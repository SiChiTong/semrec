# This is a config file for the beliefstate high level plan logging
# tool. All configuration information that might be important for the
# operation of the tool can be specified here.
#
# When dealing with paths, the following tokens can be used (they will
# be automatically replaced by their respective content in the current
# context):
#
#  * $HOME or ${HOME}
#    Replaced by the current user's home directory.
#    Example: $HOME for user "jan" becomes "/home/jan/"
#
#  * $WORKSPACE or ${WORKSPACE}
#    Replaced by the current user's active ROS workspace directory
#
#  * ${PACKAGE pkg}
#    Replaced by the global ROS path of the package named `pkg'

persistent-data-storage: {
  # This is where physical experimental data is stored (e.g. images
  # taken) and where exported files are written to (OWL files, PDFs,
  # SVGs, ...)
  base-data-directory = "$HOME/bs_experimental_data";
  
  # The logged data can be written to a MongoDB live. This information
  # defines the connection details.
  use-mongodb = true;
  mongodb: {
    host = "localhost";
    port = 27017;
    database = "beliefstate";
  };
};

experiment-data: {
  # The experiment name mask *must* include either the `%d' escape
  # sequence for automatic numbering, or the `%s' escape sequence for
  # date assertion (and not both). This way, the experiment will be
  # labelled automatically and will not overwrite old data from other
  # experiments. When using the date placeholder, it will be replaced
  # by the current date in the format `YYYY-MM-DD_HH-MM-SS'.
  experiment-name-mask = "exp-%s";
  symlink-name = "current-experiment";
};

plugins: {
  load-development-plugins = true;
  search-paths = ["$WORKSPACE/lib/", "${PACKAGE bs_plugin_knowrob}/lib/"];

  # Not all of these are actually necessary here, as they depend on
  # each other (resulting in automatic loading)
  load = ["symboliclog", "ros", "owlexporter", "dotexporter", "imagecapturer", "supervisor", "knowrob", "interactive", "experiment_knowledge", "experiment_context"];
  
  colors = ["31", "32", "33", "34", "35", "36", "37"];
  
  # Individual plugin configurations consist of groups of settings
  # that hold the "plugin" field in its top-level group. In order to
  # configure the plugin "ros" with the node-name "beliefstate_ros",
  # one would configure it this way:
  # 
  # individual-configurations = (
  #   { plugin = "ros";
  #     node-name = "beliefstate_ros"; }
  # );
  individual-configurations = (
    { plugin = "symboliclog";
      semantics-descriptor-file = "${PACKAGE beliefstate}/data/semantics_descriptor_files/cram_knowrob_pickandplace.cfg"; },
    { plugin = "ros";
      node-name = "beliefstate_ros"; },
    { plugin = "knowrob";
      json-service = "/json_prolog";
      wait-for-service-duration = -1; }
  );
};

miscellaneous: {
  display-unhandled-events = false;
  display-unhandled-service-events = false;
};
