# This file holds the ROS plugin signal mappings to internal event
# types, plus additional information for each mapping (such as whether
# a new request ID must be opened).

arbitrary-mappings: {
  mappings = ( { ros-signal = ["add-image"];
  	       	 event = "add-image-from-topic";
		 # A new request ID will ne opened and associated with
		 # this event.
		 open-new-request-id = true; },
	       { ros-signal = ["add-failure", "add-designator",
	       	 	       "equate-designators", "add-object",
			       "start-new-experiment", "export-planlog",
			       "set-experiment-meta-data", "catch-failure",
			       "rethrow-failure"];
		 # The asterisk (`*`) event represents the same name
		 # as the incoming ROS signal name. The ROS signal
		 # name will therefore just be forwarded to the event
		 # name.
		 event = "*"; },
	       { ros-signal = "register-interactive-object";
	       	 event = "symbolic-add-object"; },
	       { ros-signal = "unregister-interactive-object";
	       	 event = "symbolic-remove-object"; },
	       { ros-signal = "set-interactive-object-menu";
	       	 event = "symbolic-set-interactive-object-menu"; },
	       { ros-signal = "update-interactive-object-pose";
	       	 event = "symbolic-update-object-pose"; } )
};
